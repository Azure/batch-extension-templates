{
    "templateMetadata":{
        "description":"Sample application template for working with Blender."
    },
    "parameters":{
        "jobName": {
            "type": "string",
            "defaultValue": "3dsmax-itoosoft-vray-dr",
            "metadata": {
                "description": "The job name",
                "advancedType": "job-id"
            }
        },
        "poolId": {
            "type": "string",
            "defaultValue": "ignored",
            "metadata": {
                "description": "The pool id"
            }
        },
        "maxVersion": {
            "type": "string",
            "defaultValue": "2020",
            "metadata": {
                "description": "The renderer to use"
            },
            "allowedValues":[
                "2019",
                "2020"           
            ]
        },
        "vrayRenderer": {
            "type": "string",
            "defaultValue": "VRayAdv",
            "metadata": {
                "description": "The renderer to use"
            },
            "allowedValues":[
                "VRayAdv",
                "VRayRT"
            ]
        },
        "inputData": {
            "type": "string",
            "metadata": {
                "description": "The file group where the input data is stored",
                "advancedType": "file-group"
            }
        },
        "sceneFile": {
            "type": "string",
            "metadata": {
                "description": "The 3ds Max scene file to be rendered",
                "advancedType": "file-in-file-group",
                "dependsOn": "inputData",
                "wildcards": "*.max"
            }
        },
        "pathFile": {
            "type": "string",
            "defaultValue": "None",
            "metadata": {
                "description": "Optional 3ds Max path file",
                "advancedType": "file-in-file-group",
                "dependsOn": "inputData",
                "wildcards": "*.mxp"
            }
        },
        "preRenderScript": {
            "type": "string",
            "defaultValue": "None",
            "metadata": {
                "description": "Optional 3ds Max pre-render script to execute",
                "advancedType": "file-in-file-group",
                "dependsOn": "inputData"
            }
        },
        "irradianceMapFile": {
            "type": "string",
            "defaultValue": "None",
            "metadata": {
                "description": "Optional VRay irradiance map file",
                "advancedType": "file-in-file-group",
                "dependsOn": "inputData"
            }
        },
        "colorCorrectionFile": {
            "type": "string",
            "defaultValue": "None",
            "metadata": {
                "description": "Optional VRay colorCorrection file",
                "advancedType": "file-in-file-group",
                "dependsOn": "inputData",
                "wildcards": "*.vccglb"
            }
        },
        "renderPresetFile": {
            "type": "string",
            "defaultValue": "None",
            "metadata": {
                "description": "Optional render preset file",
                "advancedType": "file-in-file-group",
                "dependsOn": "inputData",
                "wildcards": "*.rps"
            }
        },
        "outputName": {
            "type": "string",
            "defaultValue": "image.jpg",
            "metadata": {
                "description": "The output filename to use when naming the rendered outputs"
            }
        },
        "camera": {
            "type": "string",
            "defaultValue": " ",
            "metadata": {
                "description": "Optional camera to render, if not specified the scene selected camera will be used."
            }
        },
        "additionalArgs": {
            "type": "string",
            "defaultValue": "-atmospherics:1",
            "metadata": {
                "description": "Any additional arguments to pass to 3ds Max, e.g. -superBlack:1"
            }
        },
        "dedicatedVmCount":{
            "type":"int",
            "defaultValue":2,
            "metadata":{
                "description":"Max nodes to use for render, must be equal to or less than pool node count."
            }
        },
        "frameStart": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Index of the first frame to render"
            }
        },
        "frameEnd": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "Index of the last frame to render"
            }
        },
        "outputs": {
            "type": "string",
            "metadata": {
                "description": "The file group where outputs will be stored",
                "advancedType": "file-group"
            }
        },
        "vrayPort": {
            "type": "string",
            "defaultValue": "20204",
            "metadata": {
                "description": "The port VRay spawner will listen on."
            }
        }
    },
   "variables":{
   },
    "job":{
        "type":"Microsoft.Batch/batchAccounts/jobs",
        "properties":{
            "id":"[parameters('jobName')]",
            "displayName":"[parameters('jobName')]",
            "onAllTasksComplete":"terminateJob",
            "poolInfo":{
                "poolId":"[parameters('poolId')]"
            },
            "jobPreparationTask": {
                "commandLine":"cmd.exe /c tree /A /F & dir /s",
                "resourceFiles": [
                    {
                        "autoStorageContainerName": "fgrp-[parameters('inputData')]",
                        "filePath": "assets"
                    }
                ],
                "userIdentity": {
                    "autoUser": {
                        "elevationLevel": "nonAdmin",
                        "scope": "pool"
                    }
                }
            },
            "taskFactory":{
                "type":"taskCollection",
                "tasks":[
                    {
                        "id":"Render",
                        "displayName":"Frame",
                        "commandLine":"powershell.exe -File 3dsmax.ps1 -maxVersion \"[parameters('maxVersion')]\" -start [parameters('frameStart')] -end [parameters('frameEnd')] -outputName \"images\\[parameters('outputName')]\" -sceneFile \"[parameters('sceneFile')]\" -pathFile \"[parameters('pathFile')]\" -renderer [parameters('vrayRenderer')] -preRenderScript \"[parameters('preRenderScript')]\" -camera \"[parameters('camera')]\" -additionalArgs \" [parameters('additionalArgs')]\" -irradianceMap \"[parameters('irradianceMapFile')]\" -nodeCount [parameters('dedicatedVmCount')] -renderPresetFile \"[parameters('renderPresetFile')]\" -colorCorrectionFile \"[parameters('colorCorrectionFile')]\" -dr -vrayPort [parameters('vrayPort')]",
                        "userIdentity": {
                            "autoUser": {
                                "elevationLevel": "admin",
                                "scope": "pool"
                            }
                        },
                        "multiInstanceSettings":{
                            "numberOfInstances":"[parameters('dedicatedVmCount')]",
                            "coordinationCommandLine":"cmd.exe /c echo noop"
                        },
                        "resourceFiles":[
                            {
                                "httpUrl":"https://raw.githubusercontent.com/Azure/batch-extension-templates/master/templates/3dsmax/scripts/3dsmax.ps1",
                                "filePath":"3dsmax.ps1"
                            },
                            {
                                "httpUrl":"https://raw.githubusercontent.com/Azure/batch-extension-templates/master/templates/3dsmax/scripts/RepathRenderElements.ms",
                                "filePath":"RepathRenderElements.ms"
                            }
                        ],
                        "outputFiles":[
                            {
                                "filePattern":"../stdout.txt",
                                "destination":{
                                    "autoStorage":{
                                        "fileGroup":"[parameters('outputs')]",
                                        "path":"[parameters('jobName')]/logs/frame.log"
                                    }
                                },
                                "uploadOptions":{
                                    "uploadCondition":"taskCompletion"
                                }
                            },
                            {
                                "filePattern":"../stderr.txt",
                                "destination":{
                                    "autoStorage":{
                                        "fileGroup":"[parameters('outputs')]",
                                        "path":"[parameters('jobName')]/logs/frame_error.log"
                                    }
                                },
                                "uploadOptions":{
                                    "uploadCondition":"taskCompletion"
                                }
                            },
                            {
                                "filePattern":"images/**/*",
                                "destination":{
                                    "autoStorage":{
                                        "fileGroup":"[parameters('outputs')]",
                                        "path":"[parameters('jobName')]/outputs"
                                    }
                                },
                                "uploadOptions":{
                                    "uploadCondition":"taskSuccess"
                                }
                            },
                            {
                                "filePattern":"*.log",
                                "destination":{
                                    "autoStorage":{
                                        "fileGroup":"[parameters('outputs')]",
                                        "path":"[parameters('jobName')]/logs"
                                    }
                                },
                                "uploadOptions":{
                                    "uploadCondition":"taskCompletion"
                                }
                            },
                            {
                                "filePattern":"vraylog.*",
                                "destination":{
                                    "autoStorage":{
                                        "fileGroup":"[parameters('outputs')]",
                                        "path":"[parameters('jobName')]/logs"
                                    }
                                },
                                "uploadOptions":{
                                    "uploadCondition":"taskCompletion"
                                }
                            }
                        ]
                    }
                ]
            }
        }
    }
}